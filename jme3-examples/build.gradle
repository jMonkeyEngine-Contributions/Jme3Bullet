//apply plugin:'application'

if (!hasProperty('mainClass')) {
    ext.mainClass = 'jme3test.TestChooser'
}

//mainClassName = ext.mainClass

dependencies {
    compile project(':jme3-blender')
    compile project(':jme3-core')
    compile project(':jme3-desktop')
    compile project(':jme3-effects')
//    compile project(':jme3-bullet')
    compile project(':jme3-jbullet')
    compile project(':jme3-jogg')
//    compile project(':jme3-jogl')
    compile project(':jme3-lwjgl')
    compile project(':jme3-networking')
    compile project(':jme3-niftygui')
    compile project(':jme3-plugins')
    compile project(':jme3-terrain')
    compile project(':jme3-testdata')
}

jar.doFirst{
    manifest {
        attributes('Manifest-Version'       : '1.0',
//                'Created-By'             : vendor,
//                'Specification-Title'    : appName,
//                'Specification-Version'  : version,
//                'Specification-Vendor'   : vendor,
//                'Implementation-Title'   : appName,
//                'Implementation-Version' : version,
//                'Implementation-Vendor'  : vendor,
                'Main-Class'             : getProperty('mainClass'),
                'Class-Path'             : configurations.compile.collect { 'lib/' + it.getName() }.join(' ') 
        )
    }
}

jar.dependsOn('copyLibs')

task copyLibs(type: Copy){
    from configurations.compile
    into buildDir.path + '/' + libsDirName + '/lib'
}